{"version":3,"file":"0843c253e0e81a528421.js","mappings":"qPAgGA,SAASA,IACP,MAAMC,EAAN,GACA,IAAK,IAAIC,EAAT,EAAgBA,EAAhB,IAA0BA,IACxBD,EAAAA,KAAU,CACRE,GADQ,EAERC,QAASC,IAAAA,SAAAA,cACTC,MAAOD,IAAAA,SAAAA,UAGX,SAGF,MAAME,EAAkC,CACtC,CAAEC,IAAF,KAAaC,KAAM,MACnB,CAAED,IAAF,UAAkBC,KAAM,WACxB,CAAED,IAAF,QAAgBC,KAAM,UAGxB,SAASC,EAAaC,GACpB,OAAOA,EAAP,GAGF,SAASC,EAAYC,GACnB,OACE,eAAoBV,GAApB,oBAA2CW,QAAS,KAAM,CAAGC,OAAQF,EAAME,SAA3E,UACE,uBAKS,SAASC,IACtB,MAAOf,EAAMgB,IAAWC,EAAAA,EAAAA,UAAxB,IACOC,EAAQC,IAAaC,EAAAA,EAAAA,aAAW,GAAgBlB,EAAjB,GAAyBF,EAAKA,EAAAA,OAALA,GAAAA,GAA/D,GAcA,cACE,MAAMqB,EAAc,CAClBnB,GADkB,EAElBC,QAASC,IAAAA,SAAAA,cACTC,MAAOD,IAAAA,SAAAA,SAGTY,EAAQ,IAAIhB,EAAAA,MAAAA,EAAJ,QAA4CA,EAAAA,MAApDgB,KACAG,IAGF,OACE,iCACE,cACEV,aADF,EAEEH,QAFF,EAGEN,KAHF,EAIEsB,YAJF,EAKEC,UALF,eAOCC,EAAAA,EAAAA,eACC,gBAAatB,GAAb,+BACE,eAAUuB,QAlClB,YAA0D,OAAEX,IAC1DE,EAAQ,IAAIhB,EAAAA,MAAAA,EAAJ,MAA8BA,EAAAA,MAAWc,EAAjDE,MAiCM,yBACA,gBAASU,MAAT,wBACE,eAAUD,QAhCpB,YAA+D,OAAEX,IAC/Da,EAAAA,IA+BQ,oBACA,eAAUF,QA7BpB,YAA+D,OAAEX,IAC/Da,EAAUb,EAAVa,IA4BQ,yBAGJC,SARF,S","sources":["webpack://react-data-grid/website/demos/ContextMenu.tsx"],"sourcesContent":["import { useState, useReducer } from 'react';\nimport { createPortal } from 'react-dom';\nimport faker from 'faker';\nimport { ContextMenu, MenuItem, SubMenu, ContextMenuTrigger } from 'react-contextmenu';\nimport { css } from '@linaria/core';\n\nimport DataGrid, { Row as GridRow } from '../../src';\nimport type { Column, RowRendererProps } from '../../src';\n\ncss`\n  @at-root {\n    .react-contextmenu {\n      background-color: #fff;\n      background-clip: padding-box;\n      border: 1px solid rgba(0, 0, 0, 0.15);\n      border-radius: 0.25rem;\n      color: #373a3c;\n      font-size: 16px;\n      margin: 2px 0 0;\n      min-width: 160px;\n      outline: none;\n      opacity: 0;\n      padding: 5px 0;\n      pointer-events: none;\n      text-align: left;\n      transition: opacity 250ms ease !important;\n    }\n\n    .react-contextmenu.react-contextmenu--visible {\n      opacity: 1;\n      pointer-events: auto;\n    }\n\n    .react-contextmenu-item {\n      background: 0 0;\n      border: 0;\n      color: #373a3c;\n      cursor: pointer;\n      font-weight: 400;\n      line-height: 1.5;\n      padding: 3px 20px;\n      text-align: inherit;\n      white-space: nowrap;\n    }\n\n    .react-contextmenu-item.react-contextmenu-item--active,\n    .react-contextmenu-item.react-contextmenu-item--selected {\n      color: #fff;\n      background-color: #20a0ff;\n      border-color: #20a0ff;\n      text-decoration: none;\n    }\n\n    .react-contextmenu-item.react-contextmenu-item--disabled,\n    .react-contextmenu-item.react-contextmenu-item--disabled:hover {\n      background-color: transparent;\n      border-color: rgba(0, 0, 0, 0.15);\n      color: #878a8c;\n    }\n\n    .react-contextmenu-item--divider {\n      border-bottom: 1px solid rgba(0, 0, 0, 0.15);\n      cursor: inherit;\n      margin-bottom: 3px;\n      padding: 2px 0;\n    }\n\n    .react-contextmenu-item--divider:hover {\n      background-color: transparent;\n      border-color: rgba(0, 0, 0, 0.15);\n    }\n\n    .react-contextmenu-item.react-contextmenu-submenu {\n      padding: 0;\n    }\n\n    .react-contextmenu-item.react-contextmenu-submenu > .react-contextmenu-item::after {\n      content: 'â–¶';\n      display: inline-block;\n      position: absolute;\n      right: 7px;\n    }\n\n    .example-multiple-targets::after {\n      content: attr(data-count);\n      display: block;\n    }\n  }\n`;\n\ninterface Row {\n  id: number;\n  product: string;\n  price: string;\n}\n\nfunction createRows(): Row[] {\n  const rows = [];\n  for (let i = 1; i < 1000; i++) {\n    rows.push({\n      id: i,\n      product: faker.commerce.productName(),\n      price: faker.commerce.price()\n    });\n  }\n  return rows;\n}\n\nconst columns: readonly Column<Row>[] = [\n  { key: 'id', name: 'ID' },\n  { key: 'product', name: 'Product' },\n  { key: 'price', name: 'Price' }\n];\n\nfunction rowKeyGetter(row: Row) {\n  return row.id;\n}\n\nfunction RowRenderer(props: RowRendererProps<Row>) {\n  return (\n    <ContextMenuTrigger id=\"grid-context-menu\" collect={() => ({ rowIdx: props.rowIdx })}>\n      <GridRow {...props} />\n    </ContextMenuTrigger>\n  );\n}\n\nexport default function ContextMenuDemo() {\n  const [rows, setRows] = useState(createRows);\n  const [nextId, setNextId] = useReducer((id: number) => id + 1, rows[rows.length - 1].id + 1);\n\n  function onRowDelete(e: React.MouseEvent<HTMLDivElement>, { rowIdx }: { rowIdx: number }) {\n    setRows([...rows.slice(0, rowIdx), ...rows.slice(rowIdx + 1)]);\n  }\n\n  function onRowInsertAbove(e: React.MouseEvent<HTMLDivElement>, { rowIdx }: { rowIdx: number }) {\n    insertRow(rowIdx);\n  }\n\n  function onRowInsertBelow(e: React.MouseEvent<HTMLDivElement>, { rowIdx }: { rowIdx: number }) {\n    insertRow(rowIdx + 1);\n  }\n\n  function insertRow(insertRowIdx: number) {\n    const newRow: Row = {\n      id: nextId,\n      product: faker.commerce.productName(),\n      price: faker.commerce.price()\n    };\n\n    setRows([...rows.slice(0, insertRowIdx), newRow, ...rows.slice(insertRowIdx)]);\n    setNextId();\n  }\n\n  return (\n    <>\n      <DataGrid\n        rowKeyGetter={rowKeyGetter}\n        columns={columns}\n        rows={rows}\n        rowRenderer={RowRenderer}\n        className=\"fill-grid\"\n      />\n      {createPortal(\n        <ContextMenu id=\"grid-context-menu\">\n          <MenuItem onClick={onRowDelete}>Delete Row</MenuItem>\n          <SubMenu title=\"Insert Row\">\n            <MenuItem onClick={onRowInsertAbove}>Above</MenuItem>\n            <MenuItem onClick={onRowInsertBelow}>Below</MenuItem>\n          </SubMenu>\n        </ContextMenu>,\n        document.body\n      )}\n    </>\n  );\n}\n"],"names":["createRows","rows","i","id","product","faker","price","columns","key","name","rowKeyGetter","row","RowRenderer","props","collect","rowIdx","ContextMenuDemo","setRows","useState","nextId","setNextId","useReducer","newRow","rowRenderer","className","createPortal","onClick","title","insertRow","document"],"sourceRoot":""}